@model MvcMovie.ViewModels.MovieGenreViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-controller="Movies" asp-action="Index" method="get">
    <p>

        <select asp-for="MovieGenre" asp-items="Model.Genres">
            <option value="">All</option>
        </select>

        Title: <input type="text" asp-for="SearchString" />
        <input type="submit" value="Filter" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
    @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSortParam })
</th>
<th>
    @Html.ActionLink("Release Date", "Index", new { sortOrder = ViewBag.DateSortParam })
</th>
<th>
    @Html.ActionLink("Genre", "Index", new { sortOrder = ViewBag.GenreSortParam })
</th>
<th>
    @Html.ActionLink("Price", "Index", new { sortOrder = ViewBag.PriceSortParam })
</th>
<th>
    @Html.ActionLink("Rating", "Index", new { sortOrder = ViewBag.RatingSortParam })
</th>           
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Movies)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    <a asp-action="Edit" asp-controller="Movies" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-controller="Movies" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-controller="Movies" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    if (Model.Movies.Count > 0)
    {
        <nav aria-label="Page navigation">
            <ul class="pagination">
                @if (Model.Movies.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="Movies" asp-action="Index" asp-route-movieGenre="@Model.MovieGenre"
                           asp-route-searchString="@Model.SearchString" asp-route-sortOrder="@Model.CurrentSort"
                           asp-route-pageNumber="@(Model.Movies.PageIndex - 1)">Previous</a>
                    </li>
                }
                @for (int i = 1; i <= Model.Movies.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.Movies.PageIndex ? "active" : "")">
                        <a class="page-link" asp-controller="Movies" asp-action="Index" asp-route-movieGenre="@Model.MovieGenre"
                           asp-route-searchString="@Model.SearchString" asp-route-sortOrder="@Model.CurrentSort"
                           asp-route-pageNumber="@i">@i</a>
                    </li>
                }
                @if (Model.Movies.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="Movies" asp-action="Index" asp-route-movieGenre="@Model.MovieGenre"
                           asp-route-searchString="@Model.SearchString" asp-route-sortOrder="@Model.CurrentSort"
                           asp-route-pageNumber="@(Model.Movies.PageIndex + 1)">Next</a>
                    </li>
                }
            </ul>
        </nav>
    }
}

